* poly-helm-mode

An Emacs major mode for editing Helm templates with syntax highlighting for both YAML and Go template syntax. Built on [[https://polymode.github.io][polymode]].

** Features

- *Smart file detection*: Automatically activates for ~.yaml~/.yml~ files in ~templates/~ or ~charts/~ directories,
  or files named ~Chart.y[a]ml~ or ~values.y[a]ml~
- *Template-specific faces*: Custom highlighting for template delimiters, keywords, variables, and functions

** Installation

*** From MELPA (Recommended)

#+BEGIN_SRC emacs-lisp
(use-package poly-helm-mode
  :ensure t)
#+END_SRC

** Dependencies

- Emacs 25.1+
- [[https://github.com/polymode/polymode][polymode]] 0.2.2+
- [[https://github.com/yoshiki/yaml-mode][yaml-mode]] 0.0.15+

** Usage

The mode automatically activates for ~.yaml~ and ~.yml~ files located in directories named ~templates~ or ~charts~. You can customize this behavior:

#+BEGIN_SRC emacs-lisp
(setq poly-helm-mode-template-directories '("templates" "charts" "my-templates"))
#+END_SRC

*** Syntax Highlighting

The mode provides specialized highlighting for:

- *Template delimiters*: ~{{}}~ and ~}}~ (including whitespace control ~{{-~ and ~-}}~)
- *Keywords*: ~if~, ~else~, ~end~, ~range~, ~with~, ~template~, ~define~, etc.
- *Variables*: ~$variable~, ~.Values.something~
- *Functions*: Built-in Helm template functions like ~include~, ~required~, ~default~

** Examples

Here's how a typical Helm template looks with syntax highlighting:

#+BEGIN_SRC yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mychart.fullname" . }}
  labels:
    {{- include "mychart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mychart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "mychart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
#+END_SRC

** Customization

*** Faces

You can customize the appearance of template syntax:

#+BEGIN_SRC emacs-lisp
(custom-set-faces
 '(poly-helm-template-delimiter-face ((t (:foreground "red" :weight bold))))
 '(poly-helm-template-keyword-face ((t (:foreground "blue" :weight bold))))
 '(poly-helm-template-variable-face ((t (:foreground "green"))))
 '(poly-helm-template-action-face ((t (:foreground "purple")))))
#+END_SRC

*** Template Directories

Customize which directories trigger poly-helm-mode:

#+BEGIN_SRC emacs-lisp
(setq poly-helm-mode-template-directories '("templates" "charts" "k8s-templates"))
#+END_SRC

** Testing

To run the tests, you will need to have Emacs and [[https://github.com/cask/cask][Cask]] installed. Then, from the root of the repository, run:

#+BEGIN_SRC bash
make test
#+END_SRC

This will install the dependencies and run the ERT tests in batch mode, printing the results to the console.

** Contributing

Contributions are welcome! Please feel free to submit issues and pull requests.

** License

This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
